// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Seesaw;

namespace Seesaw.Migrations
{
    [DbContext(typeof(SeesawDbContext))]
    [Migration("20211129171031_AddTeamReservationTeamandDeskBookingTable")]
    partial class AddTeamReservationTeamandDeskBookingTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresExtension("postgis")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MeetingRoomMeetingRoomAttribute", b =>
                {
                    b.Property<int>("AttributesId")
                        .HasColumnType("integer");

                    b.Property<int>("CompliantRoomsId")
                        .HasColumnType("integer");

                    b.HasKey("AttributesId", "CompliantRoomsId");

                    b.HasIndex("CompliantRoomsId");

                    b.ToTable("MeetingRoomMeetingRoomAttribute");
                });

            modelBuilder.Entity("Seesaw.Models.Desk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Polygon>("BoundingBox")
                        .HasColumnType("geometry");

                    b.Property<int?>("ContainingUnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContainingUnitId");

                    b.ToTable("Desks");
                });

            modelBuilder.Entity("Seesaw.Models.DeskBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BookerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OccupierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DeskBookings");
                });

            modelBuilder.Entity("Seesaw.Models.MeetingRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Polygon>("BoundingBox")
                        .HasColumnType("geometry");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<int?>("ContainingUnitId")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContainingUnitId");

                    b.ToTable("MeetingRooms");
                });

            modelBuilder.Entity("Seesaw.Models.MeetingRoomAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MeetingRoomAttributes");
                });

            modelBuilder.Entity("Seesaw.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("Seesaw.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("BookedFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("BookedTo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Seesaw.Models.TeamReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DeskId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeskId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamReservations");
                });

            modelBuilder.Entity("Seesaw.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ContainingOfficeId")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<byte[]>("FloorPlanImage")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("ContainingOfficeId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("MeetingRoomMeetingRoomAttribute", b =>
                {
                    b.HasOne("Seesaw.Models.MeetingRoomAttribute", null)
                        .WithMany()
                        .HasForeignKey("AttributesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Seesaw.Models.MeetingRoom", null)
                        .WithMany()
                        .HasForeignKey("CompliantRoomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Seesaw.Models.Desk", b =>
                {
                    b.HasOne("Seesaw.Models.Unit", "ContainingUnit")
                        .WithMany()
                        .HasForeignKey("ContainingUnitId");

                    b.Navigation("ContainingUnit");
                });

            modelBuilder.Entity("Seesaw.Models.MeetingRoom", b =>
                {
                    b.HasOne("Seesaw.Models.Unit", "ContainingUnit")
                        .WithMany()
                        .HasForeignKey("ContainingUnitId");

                    b.Navigation("ContainingUnit");
                });

            modelBuilder.Entity("Seesaw.Models.TeamReservation", b =>
                {
                    b.HasOne("Seesaw.Models.Desk", "Desk")
                        .WithMany()
                        .HasForeignKey("DeskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Seesaw.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desk");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Seesaw.Models.Unit", b =>
                {
                    b.HasOne("Seesaw.Models.Office", "ContainingOffice")
                        .WithMany("Units")
                        .HasForeignKey("ContainingOfficeId");

                    b.Navigation("ContainingOffice");
                });

            modelBuilder.Entity("Seesaw.Models.Office", b =>
                {
                    b.Navigation("Units");
                });
#pragma warning restore 612, 618
        }
    }
}
